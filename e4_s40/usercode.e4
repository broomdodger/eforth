CR .( ++++ eForth btc s40 user CODE optimization ++++ )
\ This file contains user code that is metacompiled and
\ put in the e4th kernel binary file loaded at startup.
\ ==============================================================
\ todo
\ ==============================================================
\ 20110121 bee move optimizations
\ 20110104 bee change to CODE.B
\ 20081229 jwr removed address and uncommented name for auto XT
\ 20081102 jwr revert to autobaud startup for 7j
\ 20080930 jwr document extended page# 0-127 (*256)
\ 20080925 jwr added PAGE@ and PAGE!
\ 20080719 jwr changes to terminal simplified comments here
\ 20080719 jwr add neighbor XT's BTC.DN BTC.UP STK.DN STK.UP
\ 20080719 jwr add meta requirement to resizing when code added
\ 20080713 jwr consistant line-lengths and eForth spelling
\ 20080713 jwr add initialization section with baud rates
\ 20080711 bee add file to meta load list
\ ==============================================================

CR .( CODE optimizations of LIST words ) CR

CODE.B _VAR ( -- a )( 0xB9 )
  H# 01d XTXT! ( _VAR ) END-CODE COMPILE-ONLY
CODE.B _CON ( -- n )( 0xBA )
  H# 01c XTXT! ( _CON ) END-CODE COMPILE-ONLY

CODE.B _ELSE ( -- )( 0x13 )
  H# 002 XTXT! ( _ELSE ) END-CODE COMPILE-ONLY
CODE.B _LIT ( -- n )( 0x10 )
  H# 02a XTXT! ( _LIT ) END-CODE COMPILE-ONLY

CODE.S INVERT ( n -- n )( 6.1.1720 ( 0x26 )
  H# 037 XTXT! ( INVERT ) END-CODE
CODE.S + ( n n -- n )( 6.1.0120 ( 0x1E )
  H# 03a XTXT! ( _+ ) END-CODE

CODE.S 1+ ( n -- n )( 6.1.0290 ) H# 003 XTXT! ( sp++ ) END-CODE
CODE.S 1- ( n -- n )( 6.1.0300 ) H# 007 XTXT! ( sp-- ) END-CODE
CODE.S NEGATE ( n -- -n )( 6.1.1910 ( 0x2C )
  H# 036 XTXT! ( NEGATE ) END-CODE
CODE.S SWAP- ( n n -- n ) H# 03b XTXT! ( SWAP- ) END-CODE

CODE.S 0= ( n -- f )( 6.1.0270 ( 0x34 )
  H# 038 XTXT! ( 0= ) END-CODE

CODE.B CELL/ ( n -- n )
  H# 023 XTXT! ( bitsy ) END-CODE IMMEDIATE
CODE.B CHAR/ ( n -- n )
  H# 023 XTXT! ( bitsy ) END-CODE IMMEDIATE
CODE.B ALIGN ( -- )( 6.1.0705 )
  H# 023 XTXT! ( bitsy ) END-CODE IMMEDIATE
CODE.B ALIGNED ( a -- a )( 6.1.0706 ( 0xAE )
  H# 023 XTXT! ( bitsy ) END-CODE IMMEDIATE
CODE.B NOOP ( -- )( 0x7B ) H# 023 XTXT! ( bitsy ) END-CODE

CODE.S 2* ( n -- n )( 6.1.0320 ( 0x59 )
  H# 026 XTXT! ( _2* ) END-CODE
CODE.S 2/ ( n -- n )( 6.1.0330 ( 0x57 )
  H# 025 XTXT! ( _2/ ) END-CODE

0 [if] ---------------------------------------------------------
NOTE: eForth metacompiler requirements:

  All numbers MUST be preceeded by either  B#  D#  H#

       B# 0101 -- binary
       D# 1234 -- decimal
       H# a55a -- hex

  DOES> is not supported

  must resize the binary file if you add more that a few words

  (and probably more...)
--------------------------------------------------------- [then]

CR .( User code ) CR
0 [if] ---------------------------------------------------------
  page# control for eforth access to the lower 128KW of sdram

  default is page 0,
  eForth is in page $7f00 (16M) or $7f80 (32M)

  pages are always 128K sequential words

  for non-overlapping pages,
  increment is $0100 (16M) or $0080 (32M)
--------------------------------------------------------- [then]

CODE.S PAGE@ ( -- page ) \ get eforth's sdram page#
  H# 014 XTXT! END-CODE
CODE.S PAGE! ( page -- ) \ set eforth's sdram page#
  H# 018 XTXT! END-CODE

0 [if] ---------------------------------------------------------
  code access to neighbor nodes

NOTE: using these words without supporting code in the
      neighbor node will hang eForth.
      Experimentation and documentation is forthcoming.
--------------------------------------------------------- [then]

\ call neighbor-provided machine code from node 11
CODE.B BTC.DN ( ? -- ? ) \ node  1 neighbor
  H# 115 XTXT! END-CODE
CODE.B BTC.UP ( ? -- ? ) \ node 21 neighbor
  H# 145 XTXT! END-CODE

\ call neighbor-provided machine code from node 12
CODE.S STK.DN ( ? -- ? ) \ node  2 neighbor
  H# 115 XTXT! END-CODE
CODE.S STK.UP ( ? -- ? ) \ node 22 neighbor
  H# 145 XTXT! END-CODE

\ assumes node2 has been loaded with default  nada  at least
: try STK.DN ;

CR .( User initialization ) CR
0 [if] ---------------------------------------------------------
  The terminal baud rate delay counts below are used with  !io
  and  @io to match your serial port or usb serial adaptor
  (autobaud will start at these rates).

  NOTE: the recorded numbers are averages--
        there's quite lot of jitter.

  Run bps-test.e4 to check your own USB-Serial Adaptor.

  Data is being sent with two stop bits--
  it's still too fast for some serial adaptors to do file
  transfers, so the character delay must be increased using
  <ctrl-F5> in those cases.

  These adaptors seemed to revert to 9600 baud when set
  (by the pc) at a rate that's too high for them (---'s below).

  |value|    baud         Keyspan     GUC-232A
  |+/-1%|    rate       -19W  -19HS

  |    0|   autobaud   waits for user to press SPACE-BAR

  |  625| 460800 baud    ---    627      ---
  | 1250| 230400 baud   1252   1254     1246
  | 2500| 115200 baud   2506   2508     2499
  | 5000|  57600 baud   5013   5015     5008
  | 7500|  38400 baud   7521   7522     7515
  |15000|  19200 baud  15066  15040    15030
  |30000|   9600 baud  30132  30078    30060

  eForth's initial behavior is user configurable--the default
  WARM is given below.
  Be sure you know what you're doing if you change it.

  : WARM ( -- )         ( default startup behavior )
    ONLY  DEFINITIONS  DECIMAL
    'IO @ !IO
    CR .VERSION
    CR .OK  QUIT ;

  D#     0     'IO !    ( set default baud-rate value  )
    ' WARM   'WARM !    ( set default startup behavior )
--------------------------------------------------------- [then]

\ Set your start-up values below
\ by modifying and uncommenting these lines:

\  D#  2500    'IO !    ( set user baud-rate value  )
\    ' WARM  'WARM !    ( set user startup behavior )

\ ==============================================================

