CR .( ++++ eForth btc x86 cpu definition  cell=32 ++++ )
\ ==============================================================
\ todo
\ ==============================================================
\ 20110209 bee update macros
\ 20110115 bee add word% ?char >adr
\ 20070917 bee move BITS/CELL
\ 20070720 bee split meta
\ ==============================================================

DECIMAL

08 CONSTANT BITS/CHAR           \ target bits per char ( 8/32 )

\ ==============================================================

32 BITS/CHAR = 8 BITS/CHAR = OR 0= [IF] CR ABORT [THEN]

32 CONSTANT BITS/CELL           \ target bits per cell

8 CONSTANT BITS/AU              \ target bits per address units

BITS/CHAR BITS/AU / \ 1 4
  CONSTANT AU/CHAR[T]           \ target address units per char

BITS/CELL BITS/AU / \ 4
  CONSTANT AU/CELL[T]           \ target address units per cell

H# 00000000 CONSTANT CODEBIT    \ bbb
H# FFFFFFFF CONSTANT CODEBIT&   \ >ADR AND mask

H# 80000000 CONSTANT LISTBIT    \ hilevel
H# 7FFFFFFF CONSTANT LISTBIT&   \ hilevel AND mask
H# 00008000 CONSTANT LISTBIT'   \ EXIT OR mask

AU/CHAR[T] CONSTANT AU/CHAR[H]  \ host address units per char
AU/CELL[T] CONSTANT AU/CELL[H]  \ host address units per cell

H# FFFFFFFF CONSTANT DATABIT&   \ target word AND mask

\ ==============================================================
\ macros for list.e4 and see.f

: [m_cell_m] ( -- ( w -- )
  S" D# 8 U.R SPACE" EVALUATE ; IMMEDIATE

: [m_ascii_m] ( -- ( w -- )
  S" RIVE >CHAR EMIT  RIVE >CHAR EMIT" EVALUATE
  S" RIVE >CHAR EMIT       >CHAR EMIT" EVALUATE ; IMMEDIATE

: [m_>adr_m] ( -- ( xt -- a )
  S" DUP [ LISTBIT ] LITERAL AND" EVALUATE
  S" IF [ LISTBIT& ] LITERAL AND EXIT" EVALUATE
  S" THEN [ CODEBIT& ] LITERAL AND" EVALUATE ; IMMEDIATE

\ ==============================================================

